{"ast":null,"code":"import _classCallCheck from\"/Users/jeffreyli/Desktop/poshenloh-www/poshenloh-bootstrap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jeffreyli/Desktop/poshenloh-www/poshenloh-bootstrap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/jeffreyli/Desktop/poshenloh-www/poshenloh-bootstrap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/jeffreyli/Desktop/poshenloh-www/poshenloh-bootstrap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/jeffreyli/Desktop/poshenloh-www/poshenloh-bootstrap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";/* \n * Component which serves the purpose of a \"root route component\". \n */var Page=/*#__PURE__*/function(_React$Component){_inherits(Page,_React$Component);function Page(){_classCallCheck(this,Page);return _possibleConstructorReturn(this,_getPrototypeOf(Page).apply(this,arguments));}_createClass(Page,[{key:\"componentDidMount\",/**\n   * Here, we define a react lifecycle method that gets executed each time \n   * our component is mounted to the DOM, which is exactly what we want in this case\n   */value:function componentDidMount(){var baseTitle=\"Po-Shen Loh\";if(this.props.title===\"\"){document.title=baseTitle;}else{document.title=baseTitle+\" | \"+this.props.title;}}/**\n   * Here, we use a component prop to render \n   * a component, as specified in route configuration\n   */},{key:\"render\",value:function render(){var PageComponent=this.props.component;return React.createElement(PageComponent,null);}}]);return Page;}(React.Component);export default Page;","map":{"version":3,"sources":["/Users/jeffreyli/Desktop/poshenloh-www/poshenloh-bootstrap/src/components/Page.js"],"names":["React","Page","baseTitle","props","title","document","PageComponent","component","Component"],"mappings":"m4BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;;MAGMC,CAAAA,I,sPACJ;;;uCAIoB,CAClB,GAAMC,CAAAA,SAAS,CAAG,aAAlB,CACA,GAAI,KAAKC,KAAL,CAAWC,KAAX,GAAqB,EAAzB,CAA6B,CAC3BC,QAAQ,CAACD,KAAT,CAAiBF,SAAjB,CACD,CAFD,IAEO,CACLG,QAAQ,CAACD,KAAT,CAAiBF,SAAS,CAAG,KAAZ,CAAoB,KAAKC,KAAL,CAAWC,KAAhD,CACD,CACF,CAED;;;4CAIS,CACP,GAAME,CAAAA,aAAa,CAAG,KAAKH,KAAL,CAAWI,SAAjC,CAEA,MACE,qBAAC,aAAD,MADF,CAGD,C,kBAxBgBP,KAAK,CAACQ,S,EA2BzB,cAAeP,CAAAA,IAAf","sourcesContent":["import React from \"react\"\n\n/* \n * Component which serves the purpose of a \"root route component\". \n */\nclass Page extends React.Component {\n  /**\n   * Here, we define a react lifecycle method that gets executed each time \n   * our component is mounted to the DOM, which is exactly what we want in this case\n   */\n  componentDidMount() {\n    const baseTitle = \"Po-Shen Loh\";\n    if (this.props.title === \"\") {\n      document.title = baseTitle;\n    } else {\n      document.title = baseTitle + \" | \" + this.props.title;\n    }\n  }\n\n  /**\n   * Here, we use a component prop to render \n   * a component, as specified in route configuration\n   */\n  render() {\n    const PageComponent = this.props.component;\n\n    return (\n      <PageComponent />\n    )\n  }\n}\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}